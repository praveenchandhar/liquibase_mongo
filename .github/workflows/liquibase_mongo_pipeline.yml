name: Liquibase MongoDB Workflow Debug

on:
  workflow_dispatch:
    inputs:
      query:
        description: "MongoDB query for Liquibase changeset generation"
        required: true
      author:
        description: "Author for the changeset"
        required: true
      context:
        description: "Database context name"
        required: true
      ticketID:
        description: "Ticket ID (used for branch creation and tracking)"
        required: true

jobs:
  generate_changeset:
    name: Generate Liquibase Changeset
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository code
      - name: Checkout Repository Code
        uses: actions/checkout@v3

      # Step 2: Set Up Python Environment
      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Step 3: Install Python Dependencies
      - name: Install Python Dependencies
        run: |
          pip install "openai==0.28"

      # Step 4: Create and Switch to a New Branch
      - name: Create and Switch to Branch
        run: |
          echo "Creating branch: feature/${{ inputs.ticketID }}"
          git checkout -b "feature/${{ inputs.ticketID }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Run Python Script to Generate Changeset
      - name: Generate and Append Liquibase Changeset
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Running Python script to append changelog..."
          python scripts/v2.py \
            --query "$(printf '%s' '${{ inputs.query }}')" \
            --author "${{ inputs.author }}" \
            --context "${{ inputs.context }}" \
            --changelog "changeset/changelog.xml"

      # Step 6: Verify Local Workspace (Debugging Step)
      - name: Verify Changes Locally
        run: |
          echo "Listing files in 'changeset/'"
          ls -l changeset/
          echo "Displaying updated changelog.xml"
          cat changeset/changelog.xml

      # Step 7: Commit Changes to Feature Branch
      - name: Commit Changes
        run: |
          echo "Committing changes to the new branch..."
          git config user.name "praveen_automation"
          git config user.email "praveenchandhar194@gmail.com"
          git add changeset/changelog.xml
          git status
          git diff --cached || echo "No meaningful changes to commit"
          git diff --cached --quiet || git commit -m "Add changeset for MongoDB query (${{ inputs.query }})"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 8: Push Feature Branch to Remote
      - name: Push Feature Branch
        run: |
          echo "Pushing branch feature/${{ inputs.ticketID }} to remote..."
          git push --set-upstream origin "feature/${{ inputs.ticketID}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Create Pull Request for Merging into Main Branch
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "feature/${{ inputs.ticketID }}"
          base: main
          title: "Feature: Add changeset for query ${{ inputs.query }}"
          body: |
            This pull request adds a new Liquibase changeset for MongoDB query:
            - **Query**: ${{ inputs.query }}
            - **Author**: ${{ inputs.author }}
            - **Context**: ${{ inputs.context }}
